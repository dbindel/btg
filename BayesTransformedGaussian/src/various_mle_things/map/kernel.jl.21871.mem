        - abstract type AbstractKernel end
        - 
        - function covariance!(b, k, θ, X, Y)
        0     distance!(b, k, θ, X, Y)
        0     b .= (x -> radial(k, θ, x)).(b)
        0     return b
        - end
        - 
        - Zygote.@adjoint function covariance!(b, k, θ, X, Y)
        -     tmp, back = pullback(b, k, θ, X, Y) do b, k, θ, X, Y
        -         d = distance!(b, k, θ, X, Y)
        -         (x -> radial(k, θ, x)).(d)
        -     end
        -     b .= tmp
        -     return b, c -> back(c)
        - end
        - 
        - function jitter!(b, ϵ; rescale=true)
        0     for i in diagind(b)
        0         b[i] += ϵ
        -     end
        0     if rescale
        0         b ./= b[1, 1]
        -     end
        0     return b
        - end
        - 
        - Zygote.@adjoint function jitter!(b, ϵ; rescale=true)
        -     tmp, back = pullback(b, ϵ) do b, ϵ
        -         c = b + UniformScaling(ϵ)
        -         if rescale
        -             c ./ c[1]
        -         else
        -             c
        -         end
        -     end
        -     b .= tmp
        -     return b, c -> back(c)
        - end
        - 
 60480000 sqeuclidean!(b, X, Y, ℓ) = sqeuclidean!(b, X ./ ℓ, Y ./ ℓ)
        - function sqeuclidean!(b, X, Y)
        0     mul!(b, X', Y, -2, 0)
        0     for i in axes(X, 2)
147840000         @views b[i, :] .+= dot(X[:, i], X[:, i])
        -     end
        0     for j in axes(Y, 2)
174720000         @views b[:, j] .+= dot(Y[:, j], Y[:, j])
        -     end
        0     return b
        - end
        - 
        - Zygote.@adjoint function sqeuclidean!(b, X, Y)
        -     tmp, back = pullback(X, Y) do A, B
        -         pairwise(SqEuclidean(), A, B; dims=2)
        -     end
        -     b .= tmp
        -     return b, c::AbstractMatrix -> (nothing, back(c)...)
        - end
        - 
        0 struct Gaussian <: AbstractKernel end
        - distance!(b, ::Gaussian, θ, X, Y) = sqeuclidean!(b, X, Y, θ[1])
        - radial(::Gaussian, _, τ) = exp(-τ / 2)
        - 
